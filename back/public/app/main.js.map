{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/articlee.ts","webpack:///./src/app/articles/articles.component.css","webpack:///./src/app/articles/articles.component.html","webpack:///./src/app/articles/articles.component.ts","webpack:///./src/app/blog.service.ts","webpack:///./src/app/dashboard.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login.guard.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/loginform.ts","webpack:///./src/app/not/not.component.css","webpack:///./src/app/not/not.component.html","webpack:///./src/app/not/not.component.ts","webpack:///./src/app/profile.guard.ts","webpack:///./src/app/profile.service.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/signup.service.ts","webpack:///./src/app/signup.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/token-interceptor.service.ts","webpack:///./src/app/token.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule , Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ArticlesComponent } from './articles/articles.component';\nimport { NotComponent } from './not/not.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileGuard } from './profile.guard';\nimport { LoginGuard } from './login.guard';\n\nconst routes : Routes = [\n  { path: '' , component: HomeComponent},\n  { path:'login' ,\n   component: LoginComponent,\n  canActivate:[LoginGuard] },\n  { path:'signup' ,\n   component: SignupComponent,\n  canActivate:[LoginGuard] },\n  { path:'profile' ,\n   component: ProfileComponent,\n  canActivate: [ProfileGuard] },\n  { path: 'articles', component: ArticlesComponent },\n  { path: 'dashboard' ,\n   component: DashboardComponent,\n  canActivate:[ProfileGuard] },\n  { path: '**', component: NotComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" >Navbar w/ text</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\"  >\\n        <a class=\\\"nav-link\\\" routerLinkActive='active' routerLink=\\\"/\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive='active' routerLink=\\\"/articles\\\">Articles</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive='active' [hidden]=\\\"loggedIn\\\" routerLink=\\\"/login\\\" >Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive='active' [hidden]=\\\"loggedIn\\\" routerLink=\\\"/signup\\\" >Signup</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive='active' [hidden]=\\\"!loggedIn\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive='active' [hidden]=\\\"!loggedIn\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [hidden]=\\\"!loggedIn\\\" href=\\\"#\\\" (click)=\\\"logout($event)\\\" >Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<br>\\n<button class=\\\"btn btn-light\\\" (click)=\\\"goBack()\\\" >Go Back</button>\\n<router-outlet></router-outlet>\\n\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { TokenService } from './token.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private location: Location ,\n              private token : TokenService,\n              private router: Router){\n\n  }\n\n  ngOnInit(){\n  }\n\n  public loggedIn = this.token.isLoggedIn();\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  \n  logout(e):void {\n    e.preventDefault();\n    this.token.removeToken();\n    window.location.reload();\n    this.router.navigate(['/']);\n  }\n    \n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ArticlesComponent } from './articles/articles.component';\nimport { NotComponent } from './not/not.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component'; \nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    ArticlesComponent,\n    NotComponent,\n    HomeComponent,\n    DashboardComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n    ],\n  providers: [{provide : HTTP_INTERCEPTORS ,\n  useClass: TokenInterceptorService ,\n  multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Articlee {\n    constructor(\n        public body:string\n    ){}\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n<div *ngIf=\\\"articles\\\">\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <td>ID</td>\\n        <td>User Name</td>\\n        <td>Article</td>\\n        <td>Created At</td>\\n        <td>Updated At</td>\\n      </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let article of articles\\\">\\n      <td>{{ article.id }}</td>\\n      <td> {{ article.user_name }} </td>\\n      <td>{{article.article}}</td>\\n      <td>{{article.created_at}}</td>\\n      <td>{{article.updated_at}}</td>\\n    </tr>\\n  </table>\\n</div>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n  {{error}}\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Article } from '../article';\nimport { BlogService } from '../blog.service';\n\n@Component({\n  selector: 'app-articles',\n  templateUrl: './articles.component.html',\n  styleUrls: ['./articles.component.css']\n})\nexport class ArticlesComponent implements OnInit {\n\n  constructor(private blogService: BlogService) { }\n\n\n  public articles: Article;\n  public error;\n\n  ngOnInit() {\n    this.getArticles();\n\n  }\n\n  getArticles() {\n    this.blogService.getPosts().subscribe((data) => { this.articles = data['data']; },\n      (error) => { this.error = error.statusText; });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Article } from './article';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor(private http : HttpClient) { }\n  private url = \"http://localhost:8000/api/get-articles\";\n\n  getPosts(): Observable<Article[]> {\n    return this.http.get<Article[]>(this.url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class DashboardService {\n\n  constructor(private http:HttpClient) { }\n\n\n\n  getImages() {\n    return this.http.get(\"http://localhost:8000/api/images\").pipe(catchError(this.handleError))\n  }\n\n  handleError(error: HttpErrorResponse) {\n    return throwError(error);\n  }\n\n  deleteImage(id) {\n    return this.http.delete(\"http://localhost:8000/api/deleteimage/\"+id).pipe(catchError(this.handleError));\n  }\n\n  getmyArticles() {\n    return this.http.get(\"http://localhost:8000/api/get-my-articles\").pipe(catchError(this.handleError));\n  }\n\n  addArticle(value) {\n    return this.http.post(\"http://localhost:8000/api/create-article\" , value).pipe(catchError(this.handleError));\n  }\n\n\n  deleteArticle(url) {\n    return this.http.delete(url).pipe(catchError(this.handleError));\n  }\n\n\n  editArticle(url , body) {\n    return this.http.put(url , body).pipe(catchError(this.handleError));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div [class.d-none]=\\\"images\\\" >\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <td>\\n          image\\n        </td>\\n        <td>\\n          createdAt\\n        </td>\\n        <td>\\n          Delete\\n        </td>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <div [class.d-none]=\\\"deleted\\\" class=\\\"alert alert-success\\\">image deleted</div>\\n      <tr *ngFor=\\\"let image of images\\\" [id]=\\\"imagee+image.id\\\" >\\n\\n        <td><a [href]=\\\"image.image\\\" target=\\\"_blank\\\"><img [src]=\\\"image.image\\\" width=\\\"150\\\" height=\\\"150\\\" /></a></td>\\n        <td>{{image.created_at}}</td>\\n        <td><button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteImage(image.id)\\\" >Delete Image</button>\\n        </td>\\n\\n        </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<br>\\n<br>\\n<hr>\\n\\n<div class=\\\"container\\\">\\n      <div>\\n        <form>\\n        <textarea class=\\\"form-control\\\" #textarea=\\\"ngModel\\\" name=\\\"body\\\" [(ngModel)]=\\\"Article.body\\\" rows=\\\"5\\\" ></textarea>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"addArticle()\\\" >Add article</button>\\n      </form>\\n      </div>\\n</div>\\n      <div *ngIf=\\\"articles\\\">\\n        <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <td>ID</td>\\n              <td>User Name</td>\\n              <td>Article</td>\\n              <td>Created At</td>\\n              <td>Updated At</td>\\n              <td>Edit</td>\\n              <td>Delete</td>\\n            </tr>\\n          </thead>\\n          <div class=\\\"alert alert-info\\\" [class.d-none]=\\\"edit\\\" >\\n            <textarea class=\\\"form-control\\\" name=\\\"body\\\" [(ngModel)]=\\\"editarticle.body\\\"></textarea>\\n            <p>{{errorsupdating}}</p>\\n            <br>\\n            <button class=\\\"btn btn-success\\\" id=\\\"update\\\" >Update Article</button>  \\n          </div>\\n\\n          <tr *ngFor=\\\"let article of articles\\\" [id]=\\\"articlee+article.id\\\" >\\n            <td>{{ article.id }}</td>\\n            <td> {{ article.user_name }} </td>\\n            <td>{{article.article}}</td>\\n            <td>{{article.created_at}}</td>\\n            <td>{{article.updated_at}}</td>\\n            <td><button class=\\\"btn btn-info\\\" (click)=\\\"editArticle(article.id)\\\" >Edit Article</button></td>\\n            <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteArticle(article.id)\\\" >Delete Article</button> </td>\\n          </tr>\\n          \\n        </table>\\n      </div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n        {{error}}\\n      </div>\\n\\n   \\n\"","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../dashboard.service';\nimport * as $ from 'jquery';\nimport { Articlee } from '../articlee';\nimport { Article } from '../article';\n \n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private dashboard:DashboardService) { \n    this.images=false;\n  }\n\n  ngOnInit() {\n    this.getImages();\n    this.getmyArticles();\n  }\n  public imagee = 'image';\n  public articlee = 'article';\n  public text;\n  public images;\n  public imagesError;\n  public deleted = true;\n  public errorDeleting;\n  public articles:Article[];\n  public articlesError;\n  public edit = true;\n  public body;\n  public errorsupdating=\"\";\n\n  public Article = new Articlee(this.text);\n  public editarticle = new Articlee(this.body);\n  getImages() {\n    this.dashboard.getImages().subscribe((data) => {this.images = data['images']} , \n    (error) => {this.imagesError=error.statusText});\n  }\n\n  \n  deleteImage(id) {\n    let con = confirm(\"Do you want to delete image?\");\n    if(con) {\n      this.dashboard.deleteImage(id).subscribe((success) => {this.deleted=false ;console.log(success);this.removeItem(id);} , \n        (error) => {this.errorDeleting = error.statusText ; console.error(error)})\n    \n    } \n  }\n  removeItem(id) {\n    $(\"#\"+id).remove();    \n  }\n\n\n  getmyArticles() {\n    this.dashboard.getmyArticles().subscribe((data)=> {this.articles=data['data']} , \n    (error) => {this.articlesError = error.statusText})\n  }\n\n  addArticle() {\n    this.dashboard.addArticle(this.Article).subscribe((success) => {console.log(success['article']); //this.addtodom(success['article'])\n    this.getmyArticles();} , \n      (error) => {console.error(error)});\n  }\n\n  deleteArticle(id) {\n    this.dashboard.deleteArticle(`http://localhost:8000/api/delete-article/${id}`).subscribe((success)=> { console.log(success); this.removearticlefromdom(id); } , (error) => {console.error(error)} )\n  }\n\n  removearticlefromdom(id) {\n    let idd = 'article'+id;\n    $('#'+idd).remove();\n  }\n\n  editArticle(id){\n    this.edit = false;\n    $(\"#update\").click(() => {\n    this.dashboard.editArticle('http://localhost:8000/api/editarticle/'+id , this.editarticle ).subscribe((success)=>{console.log(success) ; this.getmyArticles();this.edit=true } , (error) => {console.error(error) ; this.errorsupdating = error.error.errors['body']}); \n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TokenService } from './token.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(private token:TokenService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.token.isLoggedIn()) {\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Loginform } from './loginform';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n  public url: string = \"http://localhost:8000/api/auth/login\"; \n\n\n  login(loginform : Loginform) {\n  \n    return this.http.post(this.url , loginform ).pipe(catchError(this.handleError));\n \n  }\n\n  handleError(error: HttpErrorResponse) {\n    return throwError(error);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row jsutify-content-center\\\">\\n  <div class=\\\"col-sm-8\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMsg\\\">\\n      {{errorMsg}}\\n    </div>\\n<form #loginform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" #emaill=\\\"ngModel\\\" [(ngModel)]=\\\"Loginform.email\\\" placeholder=\\\"Enter email\\\" required>\\n    <div class=\\\"text-danger\\\" [class.d-none]=\\\"emaill.valid  || emaill.untouched\\\">Email field is invalid</div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputPassword1\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"pass\\\"  #passs=\\\"ngModel\\\" [(ngModel)]=\\\"Loginform.password\\\" placeholder=\\\"Password\\\" required>\\n    <div [class.d-none]=\\\"passs.valid || passs.untouched\\\" class=\\\"text-danger\\\">The password field is invalid</div>\\n  </div>\\n  <button [disabled]=\\\"loginform.form.invalid || submitted\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</div></form>\\n</div></div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Loginform } from '../loginform';\nimport { LoginService } from '../login.service';\nimport { TokenService } from '../token.service';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private http:HttpClient ,\n      private LoginService: LoginService ,\n      private Token:TokenService,\n      private router:Router) { }\n\n  public submitted = false;\n  public errorMsg;\n  public email = null;\n  public password = null;\n\n  public Loginform = new Loginform(this.email , this.password);\n\n  ngOnInit() {\n  }\n  \n  private tok;\n\n  onSubmit() {\n    this.LoginService.login(this.Loginform).subscribe((data) => {\n      this.tok=data['access_token'];\n      this.handleToken(this.tok);} , \n      (error) => {this.errorMsg = error.statusText;});\n      this.submitted = true;\n    console.log(this.Token.isTokenExpired());\n  }\n\n  handleToken(token) {\n    this.Token.handle(token);\n    window.location.reload();\n    this.router.navigate(['/']);\n  }\n\n}\n","export class Loginform {\n\n    constructor(public email:string,\n    public password:string) {}\n\n}\n","module.exports = \"\"","module.exports = \"<h1 style=\\\"color:red\\\"> 404 Page Not Found </h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not',\n  templateUrl: './not.component.html',\n  styleUrls: ['./not.component.css']\n})\nexport class NotComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if(this.Token.isLoggedIn()){\n\n          return true;\n      \n      } else {\n          this.router.navigate(['/login'])\n          return false;\n      }\n    }\n\n  \n  constructor(private Token:TokenService,\n              private router:Router) {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\nimport { ImageInterface } from './image';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http:HttpClient) { }\n\n\n  getdata() {\n    return this.http.get(\"http://localhost:8000/api/auth/me\").pipe(catchError(this.handleError));\n  }\n\n  getimages() : Observable<ImageInterface[]> {\n    return this.http.get<ImageInterface[]>(\"http://localhost:8000/api/images\").pipe(catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    return throwError(error);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n<br>\\n<br>\\n<hr>\\n<input type=\\\"file\\\" (change)=\\\"onChange($event)\\\" #fileimage />\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"upload()\\\" >upload</button>\\n<br>\\n<br>\\n<div class=\\\"alert alert-success\\\" [class.d-none]=\\\"!done\\\" >Image {{imageName}} have been  uploaded</div>\\n<div class=\\\"alert alert-danger\\\" [class.d-none]=\\\"!error\\\" >Error \\\"{{error}}\\\" uploading image {{imageName}} </div>\\n\\n<br>\\n<br>\\n<div *ngIf=\\\"images\\\" >\\n    <table class=\\\"table\\\">\\n        <thead>\\n            <tr>\\n                <td>\\n                    image\\n                </td>\\n                <td>\\n                    createdAt\\n                </td>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let image of images\\\">\\n            <td><a [href]=\\\"image.image\\\" target=\\\"_blank\\\" ><img [src]=\\\"image.image\\\" width=\\\"150\\\" height=\\\"150\\\" /></a></td>\\n            <td>{{image.created_at}}</td>\\n        </tr>\\n        </tbody>\\n    </table>\\n</div>\\n<br>\\n<br>\\n<div *ngIf=\\\"articles\\\">\\n\\n<h3>My Articles</h3>\\n    <table class=\\\"table\\\">\\n        <thead>\\n            <tr>\\n                <td>ID</td>\\n                <td>User Name</td>\\n                <td>Article</td>\\n                <td>Created At</td>\\n                <td>Updated At</td>\\n                <td>Edit</td>\\n                <td>Delete</td>\\n            </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let article of articles\\\">\\n            <td>{{ article.id }}</td>\\n            <td> {{ article.user_name }} </td>\\n            <td>{{article.article}}</td>\\n            <td>{{article.created_at}}</td>\\n            <td>{{article.updated_at}}</td>\\n            <td><a href=\\\"#\\\" class=\\\"link\\\" (click)=\\\"edit(article.id)\\\" >Edit</a></td>\\n            <td><a href=\\\"#\\\" class=\\\"link\\\" (click)=\\\"delete(article.id)\\\">Delete</a></td>\\n        </tr>\\n    </table>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TokenService } from '../token.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ProfileService } from '../profile.service';\nimport { ImageInterface } from '../image';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private token:TokenService , private http: HttpClient ,\n              private profile:ProfileService) { }\n\n  ngOnInit() {\n    this.getimages();\n  }\n\n  private selectedFile:File;\n\n  onChange(event) {\n    this.selectedFile = event.target.files[0];\n    this.imageName = event.target.files[0]['name'];\n  }\n  public images:ImageInterface[];\n  public done=false;\n  public imageName;\n  public error;\n  public errorimages;\n  upload() {\n    let fd = new FormData();\n    fd.append('image' , this.selectedFile , this.selectedFile.name);\n    this.http.post(\"http://localhost:8000/api/uploadimage\" , fd , {reportProgress:true , observe:'events'}).subscribe((e) => { this.done=true;console.log(e);this.getimages(); } , (error) => {console.error(error) ; this.error = error.statusText; });\n  }\n\n  getimages() {\n    return this.profile.getimages().subscribe((data) => {this.images = data['images']} , \n  (error) => {this.errorimages = error.statusText; console.error(error);})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n\n  constructor(private http:HttpClient) { }\n\n\n  signup({ name , email , password , password_confirmation}) {\n    return this.http.post(\"http://localhost:8000/api/auth/signup\" , {name , email , password , password_confirmation}).pipe(catchError(this.handleError));\n  }\n\n\n  handleError(error: HttpErrorResponse) {\n    return throwError(error);\n  }\n\n}\n","export class Signupform {\n    constructor(public name: string,\n    public email: string,\n    public password: string,\n    public password_confirmation:string){}\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row jsutify-content-center\\\">\\n  <div class=\\\"col-sm-8\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMsg\\\">\\n      {{errorMsg}}\\n    </div>\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"success\\\">\\n      {{success}}\\n    </div>\\n    <form #signupform=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Name</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"name\\\" #nameM=\\\"ngModel\\\" [(ngModel)]=\\\"Signupform.name\\\" placeholder=\\\"Enter name\\\"\\n          required>\\n        <div class=\\\"text-danger\\\" [class.d-none]=\\\"nameM.valid  || nameM.untouched\\\">Name field is invalid</div>\\n        <div class=\\\"text-danger\\\" [class.d-none]=\\\"!error.name\\\">{{error.name}}</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" #emailM=\\\"ngModel\\\" [(ngModel)]=\\\"Signupform.email\\\" placeholder=\\\"Enter email\\\"\\n          required>\\n        <div class=\\\"text-danger\\\" [class.d-none]=\\\"emailM.valid  || emailM.untouched\\\">Email field is invalid</div>\\n        <div class=\\\"text-danger\\\" [class.d-none]=\\\"!error.email\\\">{{error.email}}</div>\\n        </div>\\n        \\n      \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputPassword1\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"pass\\\" #passM=\\\"ngModel\\\" [(ngModel)]=\\\"Signupform.password\\\" placeholder=\\\"Password\\\"\\n            required>\\n          <div [class.d-none]=\\\"passM.valid || passM.untouched\\\" class=\\\"text-danger\\\">The password field is invalid</div>\\n          <div class=\\\"text-danger\\\" [class.d-none]=\\\"!error.password\\\">{{error.password}}</div>\\n          </div>\\n\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputPassword1\\\">Password Confirmation</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"cpass\\\" #cpassM=\\\"ngModel\\\" [(ngModel)]=\\\"Signupform.password_confirmation\\\" placeholder=\\\"Password\\\"\\n            required>\\n          <div [class.d-none]=\\\"cpassM.untouched || cpassM.value == passM.value\\\" class=\\\"text-danger\\\">The password confirmation field is invalid</div>\\n          <div class=\\\"text-danger\\\" [class.d-none]=\\\"!error.password_confirmation\\\">{{error.password_confirmation}}</div>\\n          \\n\\n        </div>\\n        <button [disabled]=\\\"signupform.form.invalid || submitted || cpassM.value != passM.value\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign Up</button>\\n      \\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SignupService } from '../signup.service';\nimport { Signupform } from '../signup';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private signup : SignupService) { }\n\n  ngOnInit() {\n  }\n\n  public submitted = false;\n\n  public errorMsg=\"\";\n  public name:string;\n  public email:string;\n  public password:string;\n  public password_confirmation:string;\n  public error=\"\";\n  public success = \"\";\n\n  private Signupform = new Signupform(this.name , this.email , this.password , this.password_confirmation);\n\n  onSubmit() {\n    this.signup.signup(this.Signupform).subscribe((data) => {this.success = data['success']} ,\n    (error) => {console.error(error);\n    this.errorMsg = error.statusText;\n    this.error = error.error.errors;});\n    this.submitted = true;\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private token: TokenService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      let toeknizedreq = req.clone({\n        setHeaders:{\n          Authorization: `Bearer ${this.token.getToken()}`\n        }\n      });\n      return next.handle(toeknizedreq);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(private http: HttpClient) { }\n\n  private refreshedToken;\n\n  handle(token) {\n    this.setToken(token);\n  }\n\n  setToken(token) {\n    localStorage.setItem('token' , token);\n  }\n\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n\n  removeToken() {\n    return localStorage.removeItem('token');\n  }\n\n\n  isTimeToRefresh() {\n    let now = new Date();\n    if(this.getToken()) {\n    let decodedToken = this.payload(this.getToken());\n    if(Math.round(now.getTime() / 1000) > (+decodedToken.exp)-900 ) {\n      return true;\n    }\n    }\n    return false;\n  }\n\n\n  isTokenExpired() {\n    let now = new Date();\n    if (this.getToken()) {\n    let decodedToken = this.payload(this.getToken());\n    let time = Math.round(now.getTime() / 1000)\n      if (time > (+decodedToken.exp)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  isValid() {\n    if(this.getToken()){\n    if (!this.isTokenExpired()) {\n    let token = this.getToken();\n    let payload = this.payload(token);\n      if(payload) {\n        return (payload.iss == \"http://localhost:8000/api/auth/login\") ? true : false;\n      }\n    }\n    }\n    return false;\n  }\n\n  payload(token) {\n    let payload = token.split('.')[1];\n    return this.decode(payload);\n  }\n\n\n  decode(token) {\n    let tok = JSON.parse(atob(token));\n    \n    return tok;\n  }\n\n  isLoggedIn() {\n    return this.isValid();\n  }\n\n\n  refreshToken(token) {\n    if(this.isTimeToRefresh()){\n      this.http.post('http://localhost:8000/api/auth/refresh' , token ).pipe(catchError(this.handleError)).subscribe((data) => {this.refreshedToken = data['access_token']} , (error)=>{console.error(error)});\n      this.setToken(this.refreshedToken);\n    }\n  }\n\n  handleError(error: HttpErrorResponse) {\n    return throwError(error);\n  } \n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}